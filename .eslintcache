[{"/home/intelie/Documents/srt2/src/App.tsx":"1","/home/intelie/Documents/srt2/src/service/subtitle.ts":"2","/home/intelie/Documents/srt2/src/cmponents/ImageSubTittle.tsx":"3","/home/intelie/Documents/srt2/src/cmponents/EditSub.tsx":"4","/home/intelie/Documents/srt2/src/reportWebVitals.ts":"5","/home/intelie/Documents/srt2/src/index.tsx":"6"},{"size":3465,"mtime":1611443681079,"results":"7","hashOfConfig":"8"},{"size":2423,"mtime":1611443809505,"results":"9","hashOfConfig":"8"},{"size":2127,"mtime":1611442190399,"results":"10","hashOfConfig":"8"},{"size":6902,"mtime":1611442909653,"results":"11","hashOfConfig":"8"},{"size":425,"mtime":1611422798347,"results":"12","hashOfConfig":"8"},{"size":449,"mtime":1611423521674,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"7hngy0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/intelie/Documents/srt2/src/App.tsx",["28","29","30"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ImageSubTittle from \"./cmponents/ImageSubTittle\";\nimport { parseObjectToPSRT, parsePSRTToObject } from \"./service/subtitle\";\nimport EditSub from \"./cmponents/EditSub\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [subs, setSubs] = useState(\n    parsePSRTToObject(\n      \"assets/-fasc-nio-asi-tico-tsuki-ga-michibiku-isekai-douchuu-vol06-cap39-pag02_.psrt\"\n    )\n  );\n\n  useEffect(() => {\n    console.log(subs);\n  }, [subs]);\n\n  return (\n    <div className=\"App container\" style={{ display: \"flex\" }}>\n      <EditSub sub={subs} setSub={setSubs} page={\"page1\"} />\n      <div>\n        <ImageSubTittle\n          imgPath=\"assets/-fasc-nio-asi-tico-tsuki-ga-michibiku-isekai-douchuu-vol06-cap39-pag02.jpg\"\n          subtitle={subs.page1}\n        />\n        <ImageSubTittle\n          style={{ width: \"1300px\" }}\n          imgPath=\"assets/-fasc-nio-asi-tico-tsuki-ga-michibiku-isekai-douchuu-vol06-cap39-pag02.jpg\"\n          subtitle={subs.page1}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nconst mock = {\n  page1: [\n    {\n      x: 6.7,\n      y: 8,\n      width: 6,\n      size: 2,\n      text: \"Nós vamos morrer!\",\n      style: {\n        fontWeight: \"bold\",\n        wordWrap: \"break-word\",\n        msWrapFlow: \"end\",\n      },\n    },\n    {\n      x: 39,\n      y: 5,\n      width: 10,\n      size: 3,\n      text: \"Basta vencer as duas\",\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 55,\n      y: 2,\n      width: 11,\n      size: 2,\n      text: \"Como vocês, humanos, ousam recusar a punição!\",\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 8,\n      y: 32,\n      width: 11,\n      size: 2,\n      text: \"Você parece estar se divertindo.\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 18.5,\n      y: 31,\n      width: 11,\n      size: 2,\n      text: \"Jovem Mestre,\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 36.5,\n      y: 32,\n      width: 11,\n      size: 2,\n      text: \"O que eu devo fazer sobre isso?!\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 10,\n      y: 65,\n      width: 7,\n      size: 2,\n      text: \"Um econt... não era isso!\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 7,\n      y: 74,\n      width: 10,\n      size: 2,\n      text: \"Espera, você viu? Quando você começou a vigiar?!\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 51,\n      y: 60,\n      width: 10,\n      size: 2.6,\n      text: `\"Algo\", você diz?`,\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 51,\n      y: 74,\n      width: 10,\n      size: 2,\n      text: \"Você teve um encontro com a Mio e agora está me pedindo ajuda?\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 65,\n      y: 60,\n      width: 10,\n      size: 2,\n      text: \"Você não pode fazer algo sobre isso?!\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 83,\n      y: 58,\n      width: 10,\n      size: 1.7,\n      text: \"Telepatia? Tomoe!\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 83.5,\n      y: 66.5,\n      width: 9,\n      size: 1.4,\n      text: `Você sabe o que está acontecendo?!`,\n      style: {\n        // fontSize:'50px'\n      },\n    },\n  ],\n};\n","/home/intelie/Documents/srt2/src/service/subtitle.ts",["31","32","33","34"],"/home/intelie/Documents/srt2/src/cmponents/ImageSubTittle.tsx",["35","36","37"],"/home/intelie/Documents/srt2/src/cmponents/EditSub.tsx",["38","39"],"/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { parseObjectToPSRT } from \"../service/subtitle\";\n\n//import DragScaleBar from 'react-drag-scale-bar'\n// import { Container } from './styles';\ntype TypeSub = {\n  [page: string]: {\n    x: number;\n    y: number;\n    index: number;\n    width: number;\n    size: number;\n    text: string;\n    style: React.CSSProperties;\n  }[];\n};\nconst EditSub: React.FC<{\n  sub: TypeSub;\n  setSub: (a: TypeSub | ((a: TypeSub) => TypeSub)) => void;\n  page?: string;\n}> = ({ sub, setSub, page }) => {\n  const [index, setIndex] = useState<string | number>(1);\n  const [x, setX] = useState<string | number>(0);\n  const [y, setY] = useState<string | number>(0);\n  const [width, setWidth] = useState<string | number>(0);\n  const [size, setSize] = useState<string | number>(0);\n  const [subText, setSubText] = useState(\"\");\n  const [show, setShow] = useState(true);\n  const [style, setStyle] = useState<React.CSSProperties>({});\n\n  const handleChangeSub = () => {\n    if (page) {\n      setSub((data) => ({\n        ...data,\n        [page]: [\n          ...sub[page]?.map((txt) => {\n            if (txt.index === parseInt(index)) {\n              return {\n                ...txt,\n                x: parseFloat(x),\n                y: parseFloat(y),\n                width: parseFloat(width),\n                size: parseFloat(size),\n                text: subText,\n                style: {\n                  ...txt?.style,\n                  ...style,\n                  backgroundColor: \"#0f0\",\n                },\n              };\n            } else {\n              if (txt.style.backgroundColor === \"#0f0\") {\n                delete txt.style.backgroundColor;\n              }\n              return txt;\n            }\n          }),\n        ],\n      }));\n    }\n  };\n\n  useEffect(() => {\n    handleChangeSub();\n  }, [x, y, width, size, subText, style]);\n\n  const handleChangeSelected = () => {\n    if (page) {\n      setSub((data) => ({\n        ...data,\n        [page]: [\n          ...sub[page]?.map((txt) => {\n            if (txt.index === parseInt(index)) {\n              console.log(\"é\");\n\n              return {\n                ...txt,\n                style: {\n                  ...txt?.style,\n                  ...style,\n                  backgroundColor: \"#0F0\",\n                },\n              };\n            } else {\n              return txt;\n            }\n          }),\n        ],\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (page) {\n      const text = sub[page]?.find((a) => a.index === parseInt(index));\n      setX(text?.x || x);\n      setY(text?.y || y);\n      setWidth(text?.width || width);\n      setSize(text?.size || size);\n      setSubText(text?.text || subText);\n      setStyle({ ...text?.style } || { ...style });\n      handleChangeSelected();\n    }\n  }, [index]);\n\n  function download(data, filename, type) {\n    var file = new Blob([data], { type: type });\n    if (window.navigator.msSaveOrOpenBlob)\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    else {\n      // Others\n      var a = document.createElement(\"a\"),\n        url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function () {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  const formatSub = (sub: TypeSub): TypeSub => {\n    if (page) {\n      sub[page].map((txt) => {\n        if (txt.style.backgroundColor === \"#0f0\") {\n          delete txt.style.backgroundColor;\n        }\n        return txt;\n      });\n    }\n    return sub;\n  };\n\n  return (\n    <Form style={{ position: \"fixed\", left: 0 }}>\n      <div className={`form-check form-switch ${!show ? \"ml-5\" : \"\"}`}>\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          onClick={() => setShow((a) => !a)}\n          id=\"flexSwitchCheckChecked\"\n          checked={show}\n        />\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">\n          Settings\n        </label>\n      </div>\n      {show && (\n        <div>\n          <Form.Group controlId=\"formIndex\">\n            <Form.Label>Index</Form.Label>\n            <Form.Control\n              value={index}\n              onChange={(e) => setIndex(e.target.value)}\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              placeholder=\"index\"\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formX\">\n            <Form.Label>X axis</Form.Label>\n            <Form.Control\n              value={x}\n              onChange={(e) => setX(e.target.value)}\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.01\"\n              placeholder=\"X\"\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formY\">\n            <Form.Label>Y axis</Form.Label>\n            <Form.Control\n              value={y}\n              onChange={(e) => setY(e.target.value)}\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.01\"\n              placeholder=\"Y\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formY\">\n            <Form.Label>Size</Form.Label>\n            <Form.Control\n              value={size}\n              onChange={(e) => setSize(e.target.value)}\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.01\"\n              placeholder=\"size\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formWidth\">\n            <Form.Label>Width</Form.Label>\n            <Form.Control\n              value={width}\n              onChange={(e) => setWidth(e.target.value)}\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.01\"\n              placeholder=\"width\"\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formText\">\n            <Form.Label>Text</Form.Label>\n            <Form.Control\n              value={subText}\n              onChange={(e) => setSubText(e.target.value)}\n              type=\"text\"\n              placeholder=\"width\"\n            />\n          </Form.Group>\n          <div>\n            <Button\n              onClick={() =>\n                download(parseObjectToPSRT(formatSub(sub)), \"sub.psrt\", \"jpg\")\n              }\n              variant=\"primary\"\n            >\n              Dowload Subtitle (.psrt)\n            </Button>\n            <Button\n              onClick={() =>\n                download(JSON.stringify(formatSub(sub)), \"sub.json\", \"jpg\")\n              }\n              variant=\"primary\"\n            >\n              Dowload Subtitle (.json)\n            </Button>\n          </div>\n        </div>\n      )}\n    </Form>\n  );\n};\n\nexport default EditSub;\n","/home/intelie/Documents/srt2/src/reportWebVitals.ts",[],"/home/intelie/Documents/srt2/src/index.tsx",[],{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":27},{"ruleId":"40","severity":1,"message":"45","line":40,"column":7,"nodeType":"42","messageId":"43","endLine":40,"endColumn":11},{"ruleId":"46","severity":1,"message":"47","line":20,"column":52,"nodeType":"48","messageId":"49","endLine":20,"endColumn":54},{"ruleId":"50","severity":1,"message":"51","line":26,"column":40,"nodeType":"52","messageId":"53","endLine":26,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":79,"column":31,"nodeType":"52","messageId":"53","endLine":79,"endColumn":33},{"ruleId":"50","severity":1,"message":"51","line":81,"column":66,"nodeType":"52","messageId":"53","endLine":81,"endColumn":68},{"ruleId":"40","severity":1,"message":"54","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"55","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":35},{"ruleId":"40","severity":1,"message":"56","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":67,"column":6,"nodeType":"59","endLine":67,"endColumn":41,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":106,"column":6,"nodeType":"59","endLine":106,"endColumn":13,"suggestions":"62"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'parseObjectToPSRT' is defined but never used.","'mock' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'parsePSRTToObject' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleChangeSub'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has missing dependencies: 'handleChangeSelected', 'page', 'size', 'style', 'sub', 'subText', 'width', 'x', and 'y'. Either include them or remove the dependency array. You can also do a functional update 'setX(x => ...)' if you only need 'x' in the 'setX' call.",["64"],{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [x, y, width, size, subText, style, handleChangeSub]",{"range":"69","text":"70"},"Update the dependencies array to be: [handleChangeSelected, index, page, size, style, sub, subText, width, x, y]",{"range":"71","text":"72"},[1922,1957],"[x, y, width, size, subText, style, handleChangeSub]",[2886,2893],"[handleChangeSelected, index, page, size, style, sub, subText, width, x, y]"]