[{"/home/intelie/Documents/srt2/src/App.tsx":"1","/home/intelie/Documents/srt2/src/service/subtitle.ts":"2","/home/intelie/Documents/srt2/src/cmponents/ImageSubTittle.tsx":"3","/home/intelie/Documents/srt2/src/cmponents/EditSub.tsx":"4","/home/intelie/Documents/srt2/src/reportWebVitals.ts":"5","/home/intelie/Documents/srt2/src/index.tsx":"6"},{"size":3475,"mtime":1611611786025,"results":"7","hashOfConfig":"8"},{"size":2423,"mtime":1611443809505,"results":"9","hashOfConfig":"8"},{"size":2277,"mtime":1611611220467,"results":"10","hashOfConfig":"8"},{"size":7571,"mtime":1611611962442,"results":"11","hashOfConfig":"8"},{"size":425,"mtime":1611422798347,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1611423644563,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7hngy0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/intelie/Documents/srt2/src/App.tsx",["27","28","29"],"/home/intelie/Documents/srt2/src/service/subtitle.ts",["30","31","32","33"],"export const parsePSRTToObject = (\n  file: string\n): {\n  [page: string]: {\n    x: number;\n    y: number;\n    index: number;\n    width: number;\n    size: number;\n    text: string;\n    style: React.CSSProperties;\n  }[];\n} => {\n  let out: { [k: string]: any } = {};\n  let currentPage = \"\";\n  let rawFile = new XMLHttpRequest();\n  rawFile.open(\"GET\", file, false);\n  rawFile.onreadystatechange = function () {\n    if (rawFile.readyState === 4) {\n      if (rawFile.status === 200 || rawFile.status == 0) {\n        let allText = rawFile.responseText;\n        console.log(allText);\n        \n        let i = 0;\n        let lastIndex = 0;\n        allText.split(\"\\n\").map((line) => {\n          if (line.includes(\"$START\")) {\n            currentPage = line.substring(6).trim();\n            out[line.substring(6).trim()] = [];\n          } else if (line.includes(\"$END\")) {\n            currentPage = \"\";\n          } else if (line.includes(\">>\")) {\n            const clearLine = line.substring(2);\n            const [x, y, s, w] = clearLine.split(\" \")[0].split(\"-\");\n            out[currentPage]?.push({\n              index: clearLine.split(\" \")[2]\n                ? parseInt(clearLine.split(\" \")[2])\n                : lastIndex + i,\n              x: parseFloat(x),\n              y: parseFloat(y),\n              size: parseFloat(s),\n              width: parseFloat(w),\n              style: JSON.parse(clearLine.split(\" \")?.[1]),\n            });\n            lastIndex = clearLine.split(\" \")[2]\n              ? parseInt(clearLine.split(\" \")[2])\n              : lastIndex;\n\n            i += 1;\n          } else if (line.length > 1) {\n            if (out[currentPage]?.length > 0) {\n              out[currentPage][out[currentPage]?.length - 1].text = line;\n            }\n          }\n        });\n      }\n    }\n  };\n\n  rawFile.send(null);\n  console.log(out);\n\n  return out;\n};\n\nexport const parseObjectToPSRT = (sub: {\n  [page: string]: {\n    x: number;\n    y: number;\n    width: number;\n    size: number;\n    text: string;\n    index: number;\n    style: React.CSSProperties;\n  }[];\n}): string => {\n  let out = \"\";\n\n  Object.keys(sub).map((page) => {\n    out += `$START ${page}\\n`;\n    sub[page].map(({ x, y, size, width, text, style, index }, i) => {\n      out += `>>${x}-${y}-${size}-${width} ${JSON.stringify(style)} ${\n        index || i\n      }\\n`;\n      out += `${text}\\n\\n`;\n    });\n    out += `$END ${page}\\n\\n`;\n  });\n  return out;\n};\n","/home/intelie/Documents/srt2/src/cmponents/ImageSubTittle.tsx",["34","35"],"/home/intelie/Documents/srt2/src/cmponents/EditSub.tsx",["36","37"],"/home/intelie/Documents/srt2/src/reportWebVitals.ts",[],"/home/intelie/Documents/srt2/src/index.tsx",[],{"ruleId":"38","severity":1,"message":"39","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":27},{"ruleId":"38","severity":1,"message":"43","line":41,"column":7,"nodeType":"40","messageId":"41","endLine":41,"endColumn":11},{"ruleId":"44","severity":1,"message":"45","line":20,"column":52,"nodeType":"46","messageId":"47","endLine":20,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":26,"column":40,"nodeType":"50","messageId":"51","endLine":26,"endColumn":42},{"ruleId":"48","severity":1,"message":"49","line":79,"column":31,"nodeType":"50","messageId":"51","endLine":79,"endColumn":33},{"ruleId":"48","severity":1,"message":"49","line":81,"column":66,"nodeType":"50","messageId":"51","endLine":81,"endColumn":68},{"ruleId":"38","severity":1,"message":"52","line":1,"column":28,"nodeType":"40","messageId":"41","endLine":1,"endColumn":35},{"ruleId":"38","severity":1,"message":"53","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":27},{"ruleId":"54","severity":1,"message":"55","line":68,"column":6,"nodeType":"56","endLine":68,"endColumn":41,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":107,"column":6,"nodeType":"56","endLine":107,"endColumn":13,"suggestions":"59"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'parseObjectToPSRT' is defined but never used.","'mock' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useMemo' is defined but never used.","'parsePSRTToObject' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleChangeSub'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has missing dependencies: 'handleChangeSelected', 'page', 'size', 'style', 'sub', 'subText', 'width', 'x', and 'y'. Either include them or remove the dependency array. You can also do a functional update 'setX(x => ...)' if you only need 'x' in the 'setX' call.",["61"],{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [x, y, width, size, subText, style, handleChangeSub]",{"range":"66","text":"67"},"Update the dependencies array to be: [handleChangeSelected, index, page, size, style, sub, subText, width, x, y]",{"range":"68","text":"69"},[1991,2026],"[x, y, width, size, subText, style, handleChangeSub]",[2955,2962],"[handleChangeSelected, index, page, size, style, sub, subText, width, x, y]"]