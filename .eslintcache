[{"/home/intelie/Documents/srt2/src/App.tsx":"1","/home/intelie/Documents/srt2/src/service/subtitle.ts":"2","/home/intelie/Documents/srt2/src/cmponents/ImageSubTittle.tsx":"3","/home/intelie/Documents/srt2/src/cmponents/EditSub.tsx":"4","/home/intelie/Documents/srt2/src/reportWebVitals.ts":"5","/home/intelie/Documents/srt2/src/index.tsx":"6"},{"size":3338,"mtime":1611423634875,"results":"7","hashOfConfig":"8"},{"size":2321,"mtime":1611422853419,"results":"9","hashOfConfig":"8"},{"size":2080,"mtime":1611422853387,"results":"10","hashOfConfig":"8"},{"size":1540,"mtime":1611424169052,"results":"11","hashOfConfig":"8"},{"size":425,"mtime":1611422798347,"results":"12","hashOfConfig":"8"},{"size":449,"mtime":1611423521674,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"7hngy0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/intelie/Documents/srt2/src/App.tsx",["29","30","31"],"import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ImageSubTittle from \"./cmponents/ImageSubTittle\";\nimport { parseObjectToPSRT, parsePSRTToObject } from \"./service/subtitle\";\nimport EditSub from \"./cmponents/EditSub\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const subs = parsePSRTToObject(\n    \"assets/-fasc-nio-asi-tico-tsuki-ga-michibiku-isekai-douchuu-vol06-cap39-pag02.psrt\"\n  );\n\n  useEffect(() => {}, []);\n\n  return (\n    <div className=\"App\" style={{ display: \"flex\" }}>\n      <EditSub />\n      <div>\n        <ImageSubTittle\n          imgPath=\"assets/-fasc-nio-asi-tico-tsuki-ga-michibiku-isekai-douchuu-vol06-cap39-pag02.jpg\"\n          subtitle={subs.page1}\n        />\n        <ImageSubTittle\n          style={{ width: \"1300px\" }}\n          imgPath=\"assets/-fasc-nio-asi-tico-tsuki-ga-michibiku-isekai-douchuu-vol06-cap39-pag02.jpg\"\n          subtitle={subs.page1}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nconst mock = {\n  page1: [\n    {\n      x: 6.7,\n      y: 8,\n      width: 6,\n      size: 2,\n      text: \"Nós vamos morrer!\",\n      style: {\n        fontWeight: \"bold\",\n        wordWrap: \"break-word\",\n        msWrapFlow: \"end\",\n      },\n    },\n    {\n      x: 39,\n      y: 5,\n      width: 10,\n      size: 3,\n      text: \"Basta vencer as duas\",\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 55,\n      y: 2,\n      width: 11,\n      size: 2,\n      text: \"Como vocês, humanos, ousam recusar a punição!\",\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 8,\n      y: 32,\n      width: 11,\n      size: 2,\n      text: \"Você parece estar se divertindo.\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 18.5,\n      y: 31,\n      width: 11,\n      size: 2,\n      text: \"Jovem Mestre,\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 36.5,\n      y: 32,\n      width: 11,\n      size: 2,\n      text: \"O que eu devo fazer sobre isso?!\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 10,\n      y: 65,\n      width: 7,\n      size: 2,\n      text: \"Um econt... não era isso!\",\n      style: {\n        //fontWeight: \"bold\",\n      },\n    },\n    {\n      x: 7,\n      y: 74,\n      width: 10,\n      size: 2,\n      text: \"Espera, você viu? Quando você começou a vigiar?!\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 51,\n      y: 60,\n      width: 10,\n      size: 2.6,\n      text: `\"Algo\", você diz?`,\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 51,\n      y: 74,\n      width: 10,\n      size: 2,\n      text: \"Você teve um encontro com a Mio e agora está me pedindo ajuda?\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 65,\n      y: 60,\n      width: 10,\n      size: 2,\n      text: \"Você não pode fazer algo sobre isso?!\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 83,\n      y: 58,\n      width: 10,\n      size: 1.7,\n      text: \"Telepatia? Tomoe!\",\n      style: {\n        // fontSize:'50px'\n      },\n    },\n    {\n      x: 83.5,\n      y: 66.5,\n      width: 9,\n      size: 1.4,\n      text: `Você sabe o que está acontecendo?!`,\n      style: {\n        // fontSize:'50px'\n      },\n    },\n  ],\n};\n","/home/intelie/Documents/srt2/src/service/subtitle.ts",["32","33","34","35"],"export const parsePSRTToObject = (\n  file: string\n): {\n  [page: string]: {\n    x: number;\n    y: number;\n    index: number;\n    width: number;\n    size: number;\n    text: string;\n    style: React.CSSProperties;\n  }[];\n} => {\n  let out: { [k: string]: any } = {};\n  let currentPage = \"\";\n  let rawFile = new XMLHttpRequest();\n  rawFile.open(\"GET\", file, false);\n  rawFile.onreadystatechange = function () {\n    if (rawFile.readyState === 4) {\n      if (rawFile.status === 200 || rawFile.status == 0) {\n        let allText = rawFile.responseText;\n        let i = 0;\n        let lastIndex = 0;\n        allText.split(\"\\n\").map((line) => {\n          if (line.includes(\"$START\")) {\n            currentPage = line.substring(6).trim();\n            out[line.substring(6).trim()] = [];\n          } else if (line.includes(\"$END\")) {\n            currentPage = \"\";\n          } else if (line.includes(\">>\")) {\n            const clearLine = line.substring(2);\n            const [x, y, s, w] = clearLine.split(\" \")[0].split(\"-\");\n            out[currentPage]?.push({\n              index: clearLine.split(\" \")[2]\n                ? parseInt(clearLine.split(\" \")[2])\n                : lastIndex + i,\n              x: parseFloat(x),\n              y: parseFloat(y),\n              size: parseFloat(s),\n              width: parseFloat(w),\n              style: JSON.parse(clearLine.split(\" \")?.[1]),\n            });\n            lastIndex = clearLine.split(\" \")[2]\n              ? parseInt(clearLine.split(\" \")[2])\n              : lastIndex;\n\n            i += 1;\n          } else if (line.length > 1) {\n            if (out[currentPage]?.length > 0) {\n              out[currentPage][out[currentPage]?.length - 1].text = line;\n            }\n          }\n        });\n      }\n    }\n  };\n\n  rawFile.send(null);\n  console.log(out);\n\n  return out;\n};\n\nexport const parseObjectToPSRT = (sub: {\n  [page: string]: {\n    x: number;\n    y: number;\n    width: number;\n    size: number;\n    text: string;\n    style: React.CSSProperties;\n  }[];\n}): string => {\n  let out = \"\";\n\n  Object.keys(sub).map((page) => {\n    out += `$START ${page}`;\n    sub[page].map(({ x, y, size, width, text, style }) => {\n      out += `${x}-${y}-${size}-${width} ${JSON.stringify(style)}\\n`;\n      out += `${text}\\n\\n`;\n    });\n    out += `$END ${page}\\n\\n`;\n  });\n  return out;\n};\n","/home/intelie/Documents/srt2/src/cmponents/ImageSubTittle.tsx",["36","37","38"],"import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { parsePSRTToObject } from \"../service/subtitle\";\n\n// import { Container } from './styles';\n\nconst ImageSubTittle: React.FC<{\n  imgPath: string;\n  subtitle: {\n    x: number;\n    y: number;\n    width: number;\n    size: number;\n    text: string;\n    index: number;\n    style: React.CSSProperties;\n  }[];\n\n  style?: React.CSSProperties;\n  [prop: string]: any;\n}> = ({ imgPath, subtitle, ...props }) => {\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [subY, setSubY] = useState<any>(0);\n  const [subX, setSubX] = useState<any>(0);\n  const [subH, setSubH] = useState<any>(0);\n  const [subW, setSubW] = useState<any>(0);\n  const updateSubs = () => {\n    setSubY(imgRef.current?.y);\n    setSubX(imgRef.current?.x);\n    setSubH(imgRef.current?.clientHeight);\n    setSubW(imgRef.current?.clientWidth);\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 11,\n          top: subY,\n          left: subX,\n          width: subW,\n          height: subH,\n        }}\n      >\n        {subtitle\n          .sort((a, b) => a.index - b.index)\n          .map(({ text, x, y, width, size, style, index }) => (\n            <SubTitle\n              key={index}\n              text={text}\n              x={x}\n              y={y}\n              width={width}\n              size={(size * subW) / 100}\n              style={style}\n            />\n          ))}\n      </div>\n      <img\n        onLoad={updateSubs}\n        onTimeUpdate={updateSubs}\n        ref={imgRef}\n        src={imgPath}\n        alt=\"pag1\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst SubTitle = ({\n  text,\n  x,\n  y,\n  width,\n  size,\n  style,\n}: {\n  text: string;\n  x: number;\n  y: number;\n  width?: number;\n  [k: string]: any;\n}) => {\n  return (\n    <p\n      style={{\n        position: \"absolute\",\n        top: `${y}%`,\n        left: `${x}%`,\n        width: `${width}%`,\n        fontSize: `${size}px`,\n        ...style,\n      }}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default ImageSubTittle;\n","/home/intelie/Documents/srt2/src/cmponents/EditSub.tsx",[],"/home/intelie/Documents/srt2/src/reportWebVitals.ts",[],"/home/intelie/Documents/srt2/src/index.tsx",[],{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":27},{"ruleId":"39","severity":1,"message":"44","line":36,"column":7,"nodeType":"41","messageId":"42","endLine":36,"endColumn":11},{"ruleId":"45","severity":1,"message":"46","line":20,"column":52,"nodeType":"47","messageId":"48","endLine":20,"endColumn":54},{"ruleId":"49","severity":1,"message":"50","line":24,"column":40,"nodeType":"51","messageId":"52","endLine":24,"endColumn":42},{"ruleId":"49","severity":1,"message":"50","line":76,"column":31,"nodeType":"51","messageId":"52","endLine":76,"endColumn":33},{"ruleId":"49","severity":1,"message":"50","line":78,"column":56,"nodeType":"51","messageId":"52","endLine":78,"endColumn":58},{"ruleId":"39","severity":1,"message":"53","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"54","line":1,"column":28,"nodeType":"41","messageId":"42","endLine":1,"endColumn":35},{"ruleId":"39","severity":1,"message":"55","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":27},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'parseObjectToPSRT' is defined but never used.","'mock' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'parsePSRTToObject' is defined but never used."]